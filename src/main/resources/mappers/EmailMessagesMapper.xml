<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.lesliu.Trading.dao.EmailMessagesMapper" >
  <resultMap id="BaseResultMap" type="cn.lesliu.Trading.pojo.EmailMessages" >
    <constructor >
      <idArg column="messageid" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="goodsid" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="goodsname" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="senduserid" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="sendusername" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="goodsownerid" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="goodsownername" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="givewords" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="giveprice" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    messageid, goodsid, goodsname, senduserid, sendusername, goodsownerid, goodsownername, 
    givewords, giveprice
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.lesliu.Trading.pojo.EmailMessagesExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from emailmessages
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from emailmessages
    where messageid = #{messageid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from emailmessages
    where messageid = #{messageid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.lesliu.Trading.pojo.EmailMessagesExample" >
    delete from emailmessages
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.lesliu.Trading.pojo.EmailMessages" >
    insert into emailmessages (messageid, goodsid, goodsname, 
      senduserid, sendusername, goodsownerid, 
      goodsownername, givewords, giveprice
      )
    values (#{messageid,jdbcType=VARCHAR}, #{goodsid,jdbcType=VARCHAR}, #{goodsname,jdbcType=VARCHAR}, 
      #{senduserid,jdbcType=VARCHAR}, #{sendusername,jdbcType=VARCHAR}, #{goodsownerid,jdbcType=VARCHAR}, 
      #{goodsownername,jdbcType=VARCHAR}, #{givewords,jdbcType=VARCHAR}, #{giveprice,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.lesliu.Trading.pojo.EmailMessages" >
    insert into emailmessages
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="messageid != null" >
        messageid,
      </if>
      <if test="goodsid != null" >
        goodsid,
      </if>
      <if test="goodsname != null" >
        goodsname,
      </if>
      <if test="senduserid != null" >
        senduserid,
      </if>
      <if test="sendusername != null" >
        sendusername,
      </if>
      <if test="goodsownerid != null" >
        goodsownerid,
      </if>
      <if test="goodsownername != null" >
        goodsownername,
      </if>
      <if test="givewords != null" >
        givewords,
      </if>
      <if test="giveprice != null" >
        giveprice,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="messageid != null" >
        #{messageid,jdbcType=VARCHAR},
      </if>
      <if test="goodsid != null" >
        #{goodsid,jdbcType=VARCHAR},
      </if>
      <if test="goodsname != null" >
        #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="senduserid != null" >
        #{senduserid,jdbcType=VARCHAR},
      </if>
      <if test="sendusername != null" >
        #{sendusername,jdbcType=VARCHAR},
      </if>
      <if test="goodsownerid != null" >
        #{goodsownerid,jdbcType=VARCHAR},
      </if>
      <if test="goodsownername != null" >
        #{goodsownername,jdbcType=VARCHAR},
      </if>
      <if test="givewords != null" >
        #{givewords,jdbcType=VARCHAR},
      </if>
      <if test="giveprice != null" >
        #{giveprice,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.lesliu.Trading.pojo.EmailMessagesExample" resultType="java.lang.Integer" >
    select count(*) from emailmessages
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update emailmessages
    <set >
      <if test="record.messageid != null" >
        messageid = #{record.messageid,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsid != null" >
        goodsid = #{record.goodsid,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsname != null" >
        goodsname = #{record.goodsname,jdbcType=VARCHAR},
      </if>
      <if test="record.senduserid != null" >
        senduserid = #{record.senduserid,jdbcType=VARCHAR},
      </if>
      <if test="record.sendusername != null" >
        sendusername = #{record.sendusername,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsownerid != null" >
        goodsownerid = #{record.goodsownerid,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsownername != null" >
        goodsownername = #{record.goodsownername,jdbcType=VARCHAR},
      </if>
      <if test="record.givewords != null" >
        givewords = #{record.givewords,jdbcType=VARCHAR},
      </if>
      <if test="record.giveprice != null" >
        giveprice = #{record.giveprice,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update emailmessages
    set messageid = #{record.messageid,jdbcType=VARCHAR},
      goodsid = #{record.goodsid,jdbcType=VARCHAR},
      goodsname = #{record.goodsname,jdbcType=VARCHAR},
      senduserid = #{record.senduserid,jdbcType=VARCHAR},
      sendusername = #{record.sendusername,jdbcType=VARCHAR},
      goodsownerid = #{record.goodsownerid,jdbcType=VARCHAR},
      goodsownername = #{record.goodsownername,jdbcType=VARCHAR},
      givewords = #{record.givewords,jdbcType=VARCHAR},
      giveprice = #{record.giveprice,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.lesliu.Trading.pojo.EmailMessages" >
    update emailmessages
    <set >
      <if test="goodsid != null" >
        goodsid = #{goodsid,jdbcType=VARCHAR},
      </if>
      <if test="goodsname != null" >
        goodsname = #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="senduserid != null" >
        senduserid = #{senduserid,jdbcType=VARCHAR},
      </if>
      <if test="sendusername != null" >
        sendusername = #{sendusername,jdbcType=VARCHAR},
      </if>
      <if test="goodsownerid != null" >
        goodsownerid = #{goodsownerid,jdbcType=VARCHAR},
      </if>
      <if test="goodsownername != null" >
        goodsownername = #{goodsownername,jdbcType=VARCHAR},
      </if>
      <if test="givewords != null" >
        givewords = #{givewords,jdbcType=VARCHAR},
      </if>
      <if test="giveprice != null" >
        giveprice = #{giveprice,jdbcType=VARCHAR},
      </if>
    </set>
    where messageid = #{messageid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.lesliu.Trading.pojo.EmailMessages" >
    update emailmessages
    set goodsid = #{goodsid,jdbcType=VARCHAR},
      goodsname = #{goodsname,jdbcType=VARCHAR},
      senduserid = #{senduserid,jdbcType=VARCHAR},
      sendusername = #{sendusername,jdbcType=VARCHAR},
      goodsownerid = #{goodsownerid,jdbcType=VARCHAR},
      goodsownername = #{goodsownername,jdbcType=VARCHAR},
      givewords = #{givewords,jdbcType=VARCHAR},
      giveprice = #{giveprice,jdbcType=VARCHAR}
    where messageid = #{messageid,jdbcType=VARCHAR}
  </update>
</mapper>