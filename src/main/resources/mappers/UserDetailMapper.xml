<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.lesliu.Trading.dao.UserDetailMapper" >
  <resultMap id="BaseResultMap" type="cn.lesliu.Trading.pojo.UserDetail" >
    <constructor >
      <idArg column="id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <idArg column="username" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="age" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="idnum" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="studentid" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="academe" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="realname" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="sex" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="phone" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="email" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="qq" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="registdate" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="lastdate" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="capacity" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="signature" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="dormnum" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="grade" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, username, age, idnum, studentid, academe, realname, sex, phone, email, qq, registdate, 
    lastdate, capacity, signature, dormnum, grade
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.lesliu.Trading.pojo.UserDetailExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from userdetail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="cn.lesliu.Trading.pojo.UserDetailKey" >
    select 
    <include refid="Base_Column_List" />
    from userdetail
    where id = #{id,jdbcType=VARCHAR}
      and username = #{username,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="cn.lesliu.Trading.pojo.UserDetailKey" >
    delete from userdetail
    where id = #{id,jdbcType=VARCHAR}
      and username = #{username,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.lesliu.Trading.pojo.UserDetailExample" >
    delete from userdetail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.lesliu.Trading.pojo.UserDetail" >
    insert into userdetail (id, username, age, 
      idnum, studentid, academe, 
      realname, sex, phone, 
      email, qq, registdate, 
      lastdate, capacity, signature, 
      dormnum, grade)
    values (#{id,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{idnum,jdbcType=VARCHAR}, #{studentid,jdbcType=VARCHAR}, #{academe,jdbcType=VARCHAR}, 
      #{realname,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, #{registdate,jdbcType=TIMESTAMP}, 
      #{lastdate,jdbcType=TIMESTAMP}, #{capacity,jdbcType=VARCHAR}, #{signature,jdbcType=VARCHAR}, 
      #{dormnum,jdbcType=VARCHAR}, #{grade,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.lesliu.Trading.pojo.UserDetail" >
    insert into userdetail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="idnum != null" >
        idnum,
      </if>
      <if test="studentid != null" >
        studentid,
      </if>
      <if test="academe != null" >
        academe,
      </if>
      <if test="realname != null" >
        realname,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="qq != null" >
        qq,
      </if>
      <if test="registdate != null" >
        registdate,
      </if>
      <if test="lastdate != null" >
        lastdate,
      </if>
      <if test="capacity != null" >
        capacity,
      </if>
      <if test="signature != null" >
        signature,
      </if>
      <if test="dormnum != null" >
        dormnum,
      </if>
      <if test="grade != null" >
        grade,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="idnum != null" >
        #{idnum,jdbcType=VARCHAR},
      </if>
      <if test="studentid != null" >
        #{studentid,jdbcType=VARCHAR},
      </if>
      <if test="academe != null" >
        #{academe,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="registdate != null" >
        #{registdate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastdate != null" >
        #{lastdate,jdbcType=TIMESTAMP},
      </if>
      <if test="capacity != null" >
        #{capacity,jdbcType=VARCHAR},
      </if>
      <if test="signature != null" >
        #{signature,jdbcType=VARCHAR},
      </if>
      <if test="dormnum != null" >
        #{dormnum,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        #{grade,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.lesliu.Trading.pojo.UserDetailExample" resultType="java.lang.Integer" >
    select count(*) from userdetail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update userdetail
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null" >
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.idnum != null" >
        idnum = #{record.idnum,jdbcType=VARCHAR},
      </if>
      <if test="record.studentid != null" >
        studentid = #{record.studentid,jdbcType=VARCHAR},
      </if>
      <if test="record.academe != null" >
        academe = #{record.academe,jdbcType=VARCHAR},
      </if>
      <if test="record.realname != null" >
        realname = #{record.realname,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null" >
        qq = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.registdate != null" >
        registdate = #{record.registdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastdate != null" >
        lastdate = #{record.lastdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.capacity != null" >
        capacity = #{record.capacity,jdbcType=VARCHAR},
      </if>
      <if test="record.signature != null" >
        signature = #{record.signature,jdbcType=VARCHAR},
      </if>
      <if test="record.dormnum != null" >
        dormnum = #{record.dormnum,jdbcType=VARCHAR},
      </if>
      <if test="record.grade != null" >
        grade = #{record.grade,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update userdetail
    set id = #{record.id,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=INTEGER},
      idnum = #{record.idnum,jdbcType=VARCHAR},
      studentid = #{record.studentid,jdbcType=VARCHAR},
      academe = #{record.academe,jdbcType=VARCHAR},
      realname = #{record.realname,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      qq = #{record.qq,jdbcType=VARCHAR},
      registdate = #{record.registdate,jdbcType=TIMESTAMP},
      lastdate = #{record.lastdate,jdbcType=TIMESTAMP},
      capacity = #{record.capacity,jdbcType=VARCHAR},
      signature = #{record.signature,jdbcType=VARCHAR},
      dormnum = #{record.dormnum,jdbcType=VARCHAR},
      grade = #{record.grade,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.lesliu.Trading.pojo.UserDetail" >
    update userdetail
    <set >
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="idnum != null" >
        idnum = #{idnum,jdbcType=VARCHAR},
      </if>
      <if test="studentid != null" >
        studentid = #{studentid,jdbcType=VARCHAR},
      </if>
      <if test="academe != null" >
        academe = #{academe,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="registdate != null" >
        registdate = #{registdate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastdate != null" >
        lastdate = #{lastdate,jdbcType=TIMESTAMP},
      </if>
      <if test="capacity != null" >
        capacity = #{capacity,jdbcType=VARCHAR},
      </if>
      <if test="signature != null" >
        signature = #{signature,jdbcType=VARCHAR},
      </if>
      <if test="dormnum != null" >
        dormnum = #{dormnum,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        grade = #{grade,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
      and username = #{username,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.lesliu.Trading.pojo.UserDetail" >
    update userdetail
    set age = #{age,jdbcType=INTEGER},
      idnum = #{idnum,jdbcType=VARCHAR},
      studentid = #{studentid,jdbcType=VARCHAR},
      academe = #{academe,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      registdate = #{registdate,jdbcType=TIMESTAMP},
      lastdate = #{lastdate,jdbcType=TIMESTAMP},
      capacity = #{capacity,jdbcType=VARCHAR},
      signature = #{signature,jdbcType=VARCHAR},
      dormnum = #{dormnum,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
      and username = #{username,jdbcType=VARCHAR}
  </update>
</mapper>